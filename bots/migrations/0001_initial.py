# Generated by Django 5.2.5 on 2025-10-21 00:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('translation_key', models.SlugField(blank=True, help_text="A unique key for the frontend to use for translation, e.g., 'productivity'.", max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, help_text='A short description of what the bot does.', max_length=255)),
                ('prompt', models.TextField()),
                ('avatar_url', models.ImageField(blank=True, null=True, upload_to='bot_avatars/')),
                ('voice', models.CharField(default='EnergeticYouth', max_length=50)),
                ('publicity', models.CharField(choices=[('Private', 'Private'), ('Guests', 'Guests'), ('Public', 'Public')], default='Public', max_length=10)),
                ('is_official', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_bots', to=settings.AUTH_USER_MODEL)),
                ('subscribers', models.ManyToManyField(blank=True, related_name='subscribed_bots', to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(blank=True, related_name='bots', to='bots.category')),
            ],
        ),
    ]
